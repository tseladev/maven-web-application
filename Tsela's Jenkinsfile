node{
    
    def mavenHome = '/var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven3.9.1/bin/mvn'
    stage('1CloneCode')
    {
     sh "echo  'cloning code from git repository' "
     git 'https://github.com/tseladev/maven-web-application'
}
   
   stage('2TestandBuild')
   {
      
       sh "${mavenHome} package"
   }
    
    
    
    stage('3CodeQA')
    {
        sh "${mavenHome} sonar:sonar"
        
        //jacoco maximumBranchCoverage: '80', maximumClassCoverage: '80', maximumComplexityCoverage: '5', maximumLineCoverage: '0', maximumMethodCoverage: '80', minimumBranchCoverage: '80', minimumClassCoverage: '80', minimumComplexityCoverage: '5', minimumLineCoverage: '80', minimumMethodCoverage: '0'"
    }
   
   stage('4UploadArtifacts')
    {
        sh "${mavenHome} deploy"
    }
    
    stage('5DeploytoUAT')
    {
      deploy adapters: [tomcat9(credentialsId: 'tomcatcred', path: '', url: 'http://54.160.90.232:8177/')], contextPath: null, onFailure: false, war: 'target/*.war'
    }
    
    stage('6Manualapproval')
    {
        sh "echo 'app ready for deployment, please review' "
        timeout(time:2, unit:'MINUTES')
        {
            input message: 'Please review and approve this app, as it is ready for deployment.'}
    }
    
    
    stage('7DeploytoPROD')
    {
      deploy adapters: [tomcat9(credentialsId: 'tomcatcred', path: '', url: 'http://54.160.90.232:8177/')], contextPath: null, onFailure: false, war: 'target/*.war'
    }
    
    stage('8Emailnotification')
    {
     emailext body: '''Hello Team,
Build is done''', recipientProviders: [developers(), contributor(), buildUser()], subject: 'RE:scripted pipeline project', to: 'orighoyeo@gmail.com'
    }
    
}
